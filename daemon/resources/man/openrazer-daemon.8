.TH "RAZER-DAEMON" 8 "2017-02-10" "OpenRazer Service" "openrazer-daemon"

.SH NAME
openrazer-daemon \- Razer Service to manage razer devices in userspace

.SH SYNOPSIS
.B openrazer-daemon
[\fI\,OPTION\/\fR]...

.SH DESCRIPTION
.B openrazer-daemon
is a userspace service which is designed to be an intermediary between userspace programs and the razer drivers. It will provide some higher level functions to allow similar operation to the Windows Razer Synapse program. This service is designed to be started by xdg-autostart as a session service.
.PP
The service has the functionality to sync effects between multiple devices, perform on-the-fly macro recording and playback and reimplements the FN+Keys logic so they work when \fBmacro_keys\fR are enabled. The service can also perform various ripple effects, it can turn off the devices when the screensaver is active and also optionally store key metrics to provide usage heatmaps.
.PP
Note, that all paths shown as defaults, eg \fB$HOME\fR/.local/share/ or \fB$HOME\fR/.config/ can be changed with the XDG Base Directory specification variables: \fB$XDG_CONFIG_HOME\fR, \fB$XDG_DATA_HOME\fR and \fB$XDG_RUNTIME_DIR\fR.

.SH OPTIONS
.TP
\fB-v\fR, \fB--verbose\fR
Enable logging of DEBUG messages to the log file and screen if running in foreground mode.
.TP
\fB-F\fR, \fB--foreground\fR
Run the dameon in the foreground and don't fork. This also enables sending the logging output to the screen as well as the log file.
.TP
\fB-r\fR, \fB--respawn\fR
Stop any existing daemon first, if one is running.
.TP
\fB-s\fR, \fB--stop\fR
Gracefully stop the existing daemon.
.TP
\fB--as-root\fR
Allow the daemon to be started as root.
.TP
\fB--config\fR=\fIconfig_file\fR
Specifies the location of the config file. If this is not provided it will default to \fB$HOME\fR/.config/openrazer/razer.conf and create it if needed from the example config.
.TP
\fB--run-dir\fR=\fIrun_directory\fR
Tells the daemon what directory is its run directory, the directory it will change to once started. It will default to \fB$XDG_RUNTIME_DIR\fR, if not set it falls back to \fB$HOME\fR/.local/share/openrazer/.
.TP
\fB--log-dir\fR=\fIlog_directory\fR
This argument decides where the log directory will be, the daemon itself will handle log rotation as it's a user session service. The daemon will default to \fB$HOME\fR/.local/share/openrazer/logs/ for its log directory.
.TP
\fB--test-dir\fR=\fItest_dir\fR
If provided the daemon will operate in test-driver mode in which it exposes devices that aren't physically connected. Use
.I scripts/create_fake_device.py
or
.I scripts/setup_fake_devices.sh
to create the directory structure.

.SH DOCUMENTATION
.PP
The full and most up-to-date documentation can be found on our GitHub repository here
https://github.com/openrazer/openrazer .

.SH BUGS
.PP
This daemon makes use of the EVIOCGRAB ioctl which will get exclusive access of the keyboard's event files in /dev/input. Whilst the service has exclusive access to the event files other programs will not receive any key presses, this is required to make FN act like a modifier. Using \fBmacro_keys\fR is considered experimental as whilst it works it is still largely untested. If FN is held the service will grab the file and then release it when FN is released, there is a race condition where if FN is held and another key presses immediately after the keypress event will leak to the system and programs will see its being held and not released (and spam the key).

.SH "SEE ALSO"
.BR razer.conf (5),
.BR https://github.com/openrazer/openrazer
